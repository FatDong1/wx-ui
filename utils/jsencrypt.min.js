var JSEncryptExports = {}, win = {}; !function (t) { var e; function i(t, e, i) { null != t && ("number" == typeof t ? this.fromNumber(t, e, i) : null == e && "string" != typeof t ? this.fromString(t, 256) : this.fromString(t, e)) } function s() { return new i(null) } i.prototype.am = function (t, e, i, s, r, n) { for (var o = 16383 & e, h = e >> 14; --n >= 0;) { var a = 16383 & this[t], u = this[t++] >> 14, c = h * a + u * o; r = ((a = o * a + ((16383 & c) << 14) + i[s] + r) >> 28) + (c >> 14) + h * u, i[s++] = 268435455 & a } return r }, e = 28, i.prototype.DB = e, i.prototype.DM = (1 << e) - 1, i.prototype.DV = 1 << e; i.prototype.FV = Math.pow(2, 52), i.prototype.F1 = 24, i.prototype.F2 = 4; var r, n, o = "0123456789abcdefghijklmnopqrstuvwxyz", h = new Array; for (r = "0".charCodeAt(0), n = 0; n <= 9; ++n)h[r++] = n; for (r = "a".charCodeAt(0), n = 10; n < 36; ++n)h[r++] = n; for (r = "A".charCodeAt(0), n = 10; n < 36; ++n)h[r++] = n; function a(t) { return o.charAt(t) } function u(t, e) { var i = h[t.charCodeAt(e)]; return null == i ? -1 : i } function c(t) { var e = s(); return e.fromInt(t), e } function f(t) { var e, i = 1; return 0 != (e = t >>> 16) && (t = e, i += 16), 0 != (e = t >> 8) && (t = e, i += 8), 0 != (e = t >> 4) && (t = e, i += 4), 0 != (e = t >> 2) && (t = e, i += 2), 0 != (e = t >> 1) && (t = e, i += 1), i } function p(t) { this.m = t } function l(t) { this.m = t, this.mp = t.invDigit(), this.mpl = 32767 & this.mp, this.mph = this.mp >> 15, this.um = (1 << t.DB - 15) - 1, this.mt2 = 2 * t.t } function g(t, e) { return t & e } function d(t, e) { return t | e } function m(t, e) { return t ^ e } function v(t, e) { return t & ~e } function y(t) { if (0 == t) return -1; var e = 0; return 0 == (65535 & t) && (t >>= 16, e += 16), 0 == (255 & t) && (t >>= 8, e += 8), 0 == (15 & t) && (t >>= 4, e += 4), 0 == (3 & t) && (t >>= 2, e += 2), 0 == (1 & t) && ++e, e } function T(t) { for (var e = 0; 0 != t;)t &= t - 1, ++e; return e } function b() { } function S(t) { return t } function D(t) { this.r2 = s(), this.q3 = s(), i.ONE.dlShiftTo(2 * t.t, this.r2), this.mu = this.r2.divide(t), this.m = t } p.prototype.convert = function (t) { return t.s < 0 || t.compareTo(this.m) >= 0 ? t.mod(this.m) : t }, p.prototype.revert = function (t) { return t }, p.prototype.reduce = function (t) { t.divRemTo(this.m, null, t) }, p.prototype.mulTo = function (t, e, i) { t.multiplyTo(e, i), this.reduce(i) }, p.prototype.sqrTo = function (t, e) { t.squareTo(e), this.reduce(e) }, l.prototype.convert = function (t) { var e = s(); return t.abs().dlShiftTo(this.m.t, e), e.divRemTo(this.m, null, e), t.s < 0 && e.compareTo(i.ZERO) > 0 && this.m.subTo(e, e), e }, l.prototype.revert = function (t) { var e = s(); return t.copyTo(e), this.reduce(e), e }, l.prototype.reduce = function (t) { for (; t.t <= this.mt2;)t[t.t++] = 0; for (var e = 0; e < this.m.t; ++e) { var i = 32767 & t[e], s = i * this.mpl + ((i * this.mph + (t[e] >> 15) * this.mpl & this.um) << 15) & t.DM; for (t[i = e + this.m.t] += this.m.am(0, s, t, e, 0, this.m.t); t[i] >= t.DV;)t[i] -= t.DV, t[++i]++ } t.clamp(), t.drShiftTo(this.m.t, t), t.compareTo(this.m) >= 0 && t.subTo(this.m, t) }, l.prototype.mulTo = function (t, e, i) { t.multiplyTo(e, i), this.reduce(i) }, l.prototype.sqrTo = function (t, e) { t.squareTo(e), this.reduce(e) }, i.prototype.copyTo = function (t) { for (var e = this.t - 1; e >= 0; --e)t[e] = this[e]; t.t = this.t, t.s = this.s }, i.prototype.fromInt = function (t) { this.t = 1, this.s = t < 0 ? -1 : 0, t > 0 ? this[0] = t : t < -1 ? this[0] = t + this.DV : this.t = 0 }, i.prototype.fromString = function (t, e) { var s; if (16 == e) s = 4; else if (8 == e) s = 3; else if (256 == e) s = 8; else if (2 == e) s = 1; else if (32 == e) s = 5; else { if (4 != e) return void this.fromRadix(t, e); s = 2 } this.t = 0, this.s = 0; for (var r = t.length, n = !1, o = 0; --r >= 0;) { var h = 8 == s ? 255 & t[r] : u(t, r); h < 0 ? "-" == t.charAt(r) && (n = !0) : (n = !1, 0 == o ? this[this.t++] = h : o + s > this.DB ? (this[this.t - 1] |= (h & (1 << this.DB - o) - 1) << o, this[this.t++] = h >> this.DB - o) : this[this.t - 1] |= h << o, (o += s) >= this.DB && (o -= this.DB)) } 8 == s && 0 != (128 & t[0]) && (this.s = -1, o > 0 && (this[this.t - 1] |= (1 << this.DB - o) - 1 << o)), this.clamp(), n && i.ZERO.subTo(this, this) }, i.prototype.clamp = function () { for (var t = this.s & this.DM; this.t > 0 && this[this.t - 1] == t;)--this.t }, i.prototype.dlShiftTo = function (t, e) { var i; for (i = this.t - 1; i >= 0; --i)e[i + t] = this[i]; for (i = t - 1; i >= 0; --i)e[i] = 0; e.t = this.t + t, e.s = this.s }, i.prototype.drShiftTo = function (t, e) { for (var i = t; i < this.t; ++i)e[i - t] = this[i]; e.t = Math.max(this.t - t, 0), e.s = this.s }, i.prototype.lShiftTo = function (t, e) { var i, s = t % this.DB, r = this.DB - s, n = (1 << r) - 1, o = Math.floor(t / this.DB), h = this.s << s & this.DM; for (i = this.t - 1; i >= 0; --i)e[i + o + 1] = this[i] >> r | h, h = (this[i] & n) << s; for (i = o - 1; i >= 0; --i)e[i] = 0; e[o] = h, e.t = this.t + o + 1, e.s = this.s, e.clamp() }, i.prototype.rShiftTo = function (t, e) { e.s = this.s; var i = Math.floor(t / this.DB); if (i >= this.t) e.t = 0; else { var s = t % this.DB, r = this.DB - s, n = (1 << s) - 1; e[0] = this[i] >> s; for (var o = i + 1; o < this.t; ++o)e[o - i - 1] |= (this[o] & n) << r, e[o - i] = this[o] >> s; s > 0 && (e[this.t - i - 1] |= (this.s & n) << r), e.t = this.t - i, e.clamp() } }, i.prototype.subTo = function (t, e) { for (var i = 0, s = 0, r = Math.min(t.t, this.t); i < r;)s += this[i] - t[i], e[i++] = s & this.DM, s >>= this.DB; if (t.t < this.t) { for (s -= t.s; i < this.t;)s += this[i], e[i++] = s & this.DM, s >>= this.DB; s += this.s } else { for (s += this.s; i < t.t;)s -= t[i], e[i++] = s & this.DM, s >>= this.DB; s -= t.s } e.s = s < 0 ? -1 : 0, s < -1 ? e[i++] = this.DV + s : s > 0 && (e[i++] = s), e.t = i, e.clamp() }, i.prototype.multiplyTo = function (t, e) { var s = this.abs(), r = t.abs(), n = s.t; for (e.t = n + r.t; --n >= 0;)e[n] = 0; for (n = 0; n < r.t; ++n)e[n + s.t] = s.am(0, r[n], e, n, 0, s.t); e.s = 0, e.clamp(), this.s != t.s && i.ZERO.subTo(e, e) }, i.prototype.squareTo = function (t) { for (var e = this.abs(), i = t.t = 2 * e.t; --i >= 0;)t[i] = 0; for (i = 0; i < e.t - 1; ++i) { var s = e.am(i, e[i], t, 2 * i, 0, 1); (t[i + e.t] += e.am(i + 1, 2 * e[i], t, 2 * i + 1, s, e.t - i - 1)) >= e.DV && (t[i + e.t] -= e.DV, t[i + e.t + 1] = 1) } t.t > 0 && (t[t.t - 1] += e.am(i, e[i], t, 2 * i, 0, 1)), t.s = 0, t.clamp() }, i.prototype.divRemTo = function (t, e, r) { var n = t.abs(); if (!(n.t <= 0)) { var o = this.abs(); if (o.t < n.t) return null != e && e.fromInt(0), void (null != r && this.copyTo(r)); null == r && (r = s()); var h = s(), a = this.s, u = t.s, c = this.DB - f(n[n.t - 1]); c > 0 ? (n.lShiftTo(c, h), o.lShiftTo(c, r)) : (n.copyTo(h), o.copyTo(r)); var p = h.t, l = h[p - 1]; if (0 != l) { var g = l * (1 << this.F1) + (p > 1 ? h[p - 2] >> this.F2 : 0), d = this.FV / g, m = (1 << this.F1) / g, v = 1 << this.F2, y = r.t, T = y - p, b = null == e ? s() : e; for (h.dlShiftTo(T, b), r.compareTo(b) >= 0 && (r[r.t++] = 1, r.subTo(b, r)), i.ONE.dlShiftTo(p, b), b.subTo(h, h); h.t < p;)h[h.t++] = 0; for (; --T >= 0;) { var S = r[--y] == l ? this.DM : Math.floor(r[y] * d + (r[y - 1] + v) * m); if ((r[y] += h.am(0, S, r, T, 0, p)) < S) for (h.dlShiftTo(T, b), r.subTo(b, r); r[y] < --S;)r.subTo(b, r) } null != e && (r.drShiftTo(p, e), a != u && i.ZERO.subTo(e, e)), r.t = p, r.clamp(), c > 0 && r.rShiftTo(c, r), a < 0 && i.ZERO.subTo(r, r) } } }, i.prototype.invDigit = function () { if (this.t < 1) return 0; var t = this[0]; if (0 == (1 & t)) return 0; var e = 3 & t; return (e = (e = (e = (e = e * (2 - (15 & t) * e) & 15) * (2 - (255 & t) * e) & 255) * (2 - ((65535 & t) * e & 65535)) & 65535) * (2 - t * e % this.DV) % this.DV) > 0 ? this.DV - e : -e }, i.prototype.isEven = function () { return 0 == (this.t > 0 ? 1 & this[0] : this.s) }, i.prototype.exp = function (t, e) { if (t > 4294967295 || t < 1) return i.ONE; var r = s(), n = s(), o = e.convert(this), h = f(t) - 1; for (o.copyTo(r); --h >= 0;)if (e.sqrTo(r, n), (t & 1 << h) > 0) e.mulTo(n, o, r); else { var a = r; r = n, n = a } return e.revert(r) }, i.prototype.toString = function (t) { if (this.s < 0) return "-" + this.negate().toString(t); var e; if (16 == t) e = 4; else if (8 == t) e = 3; else if (2 == t) e = 1; else if (32 == t) e = 5; else { if (4 != t) return this.toRadix(t); e = 2 } var i, s = (1 << e) - 1, r = !1, n = "", o = this.t, h = this.DB - o * this.DB % e; if (o-- > 0) for (h < this.DB && (i = this[o] >> h) > 0 && (r = !0, n = a(i)); o >= 0;)h < e ? (i = (this[o] & (1 << h) - 1) << e - h, i |= this[--o] >> (h += this.DB - e)) : (i = this[o] >> (h -= e) & s, h <= 0 && (h += this.DB, --o)), i > 0 && (r = !0), r && (n += a(i)); return r ? n : "0" }, i.prototype.negate = function () { var t = s(); return i.ZERO.subTo(this, t), t }, i.prototype.abs = function () { return this.s < 0 ? this.negate() : this }, i.prototype.compareTo = function (t) { var e = this.s - t.s; if (0 != e) return e; var i = this.t; if (0 != (e = i - t.t)) return this.s < 0 ? -e : e; for (; --i >= 0;)if (0 != (e = this[i] - t[i])) return e; return 0 }, i.prototype.bitLength = function () { return this.t <= 0 ? 0 : this.DB * (this.t - 1) + f(this[this.t - 1] ^ this.s & this.DM) }, i.prototype.mod = function (t) { var e = s(); return this.abs().divRemTo(t, null, e), this.s < 0 && e.compareTo(i.ZERO) > 0 && t.subTo(e, e), e }, i.prototype.modPowInt = function (t, e) { var i; return i = t < 256 || e.isEven() ? new p(e) : new l(e), this.exp(t, i) }, i.ZERO = c(0), i.ONE = c(1), b.prototype.convert = S, b.prototype.revert = S, b.prototype.mulTo = function (t, e, i) { t.multiplyTo(e, i) }, b.prototype.sqrTo = function (t, e) { t.squareTo(e) }, D.prototype.convert = function (t) { if (t.s < 0 || t.t > 2 * this.m.t) return t.mod(this.m); if (t.compareTo(this.m) < 0) return t; var e = s(); return t.copyTo(e), this.reduce(e), e }, D.prototype.revert = function (t) { return t }, D.prototype.reduce = function (t) { for (t.drShiftTo(this.m.t - 1, this.r2), t.t > this.m.t + 1 && (t.t = this.m.t + 1, t.clamp()), this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3), this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2); t.compareTo(this.r2) < 0;)t.dAddOffset(1, this.m.t + 1); for (t.subTo(this.r2, t); t.compareTo(this.m) >= 0;)t.subTo(this.m, t) }, D.prototype.mulTo = function (t, e, i) { t.multiplyTo(e, i), this.reduce(i) }, D.prototype.sqrTo = function (t, e) { t.squareTo(e), this.reduce(e) }; var E = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997], x = (1 << 26) / E[E.length - 1]; function w() { this.i = 0, this.j = 0, this.S = new Array } i.prototype.chunkSize = function (t) { return Math.floor(Math.LN2 * this.DB / Math.log(t)) }, i.prototype.toRadix = function (t) { if (null == t && (t = 10), 0 == this.signum() || t < 2 || t > 36) return "0"; var e = this.chunkSize(t), i = Math.pow(t, e), r = c(i), n = s(), o = s(), h = ""; for (this.divRemTo(r, n, o); n.signum() > 0;)h = (i + o.intValue()).toString(t).substr(1) + h, n.divRemTo(r, n, o); return o.intValue().toString(t) + h }, i.prototype.fromRadix = function (t, e) { this.fromInt(0), null == e && (e = 10); for (var s = this.chunkSize(e), r = Math.pow(e, s), n = !1, o = 0, h = 0, a = 0; a < t.length; ++a) { var c = u(t, a); c < 0 ? "-" == t.charAt(a) && 0 == this.signum() && (n = !0) : (h = e * h + c, ++o >= s && (this.dMultiply(r), this.dAddOffset(h, 0), o = 0, h = 0)) } o > 0 && (this.dMultiply(Math.pow(e, o)), this.dAddOffset(h, 0)), n && i.ZERO.subTo(this, this) }, i.prototype.fromNumber = function (t, e, s) { if ("number" == typeof e) if (t < 2) this.fromInt(1); else for (this.fromNumber(t, s), this.testBit(t - 1) || this.bitwiseTo(i.ONE.shiftLeft(t - 1), d, this), this.isEven() && this.dAddOffset(1, 0); !this.isProbablePrime(e);)this.dAddOffset(2, 0), this.bitLength() > t && this.subTo(i.ONE.shiftLeft(t - 1), this); else { var r = new Array, n = 7 & t; r.length = 1 + (t >> 3), e.nextBytes(r), n > 0 ? r[0] &= (1 << n) - 1 : r[0] = 0, this.fromString(r, 256) } }, i.prototype.bitwiseTo = function (t, e, i) { var s, r, n = Math.min(t.t, this.t); for (s = 0; s < n; ++s)i[s] = e(this[s], t[s]); if (t.t < this.t) { for (r = t.s & this.DM, s = n; s < this.t; ++s)i[s] = e(this[s], r); i.t = this.t } else { for (r = this.s & this.DM, s = n; s < t.t; ++s)i[s] = e(r, t[s]); i.t = t.t } i.s = e(this.s, t.s), i.clamp() }, i.prototype.changeBit = function (t, e) { var s = i.ONE.shiftLeft(t); return this.bitwiseTo(s, e, s), s }, i.prototype.addTo = function (t, e) { for (var i = 0, s = 0, r = Math.min(t.t, this.t); i < r;)s += this[i] + t[i], e[i++] = s & this.DM, s >>= this.DB; if (t.t < this.t) { for (s += t.s; i < this.t;)s += this[i], e[i++] = s & this.DM, s >>= this.DB; s += this.s } else { for (s += this.s; i < t.t;)s += t[i], e[i++] = s & this.DM, s >>= this.DB; s += t.s } e.s = s < 0 ? -1 : 0, s > 0 ? e[i++] = s : s < -1 && (e[i++] = this.DV + s), e.t = i, e.clamp() }, i.prototype.dMultiply = function (t) { this[this.t] = this.am(0, t - 1, this, 0, 0, this.t), ++this.t, this.clamp() }, i.prototype.dAddOffset = function (t, e) { if (0 != t) { for (; this.t <= e;)this[this.t++] = 0; for (this[e] += t; this[e] >= this.DV;)this[e] -= this.DV, ++e >= this.t && (this[this.t++] = 0), ++this[e] } }, i.prototype.multiplyLowerTo = function (t, e, i) { var s, r = Math.min(this.t + t.t, e); for (i.s = 0, i.t = r; r > 0;)i[--r] = 0; for (s = i.t - this.t; r < s; ++r)i[r + this.t] = this.am(0, t[r], i, r, 0, this.t); for (s = Math.min(t.t, e); r < s; ++r)this.am(0, t[r], i, r, 0, e - r); i.clamp() }, i.prototype.multiplyUpperTo = function (t, e, i) { --e; var s = i.t = this.t + t.t - e; for (i.s = 0; --s >= 0;)i[s] = 0; for (s = Math.max(e - this.t, 0); s < t.t; ++s)i[this.t + s - e] = this.am(e - s, t[s], i, 0, 0, this.t + s - e); i.clamp(), i.drShiftTo(1, i) }, i.prototype.modInt = function (t) { if (t <= 0) return 0; var e = this.DV % t, i = this.s < 0 ? t - 1 : 0; if (this.t > 0) if (0 == e) i = this[0] % t; else for (var s = this.t - 1; s >= 0; --s)i = (e * i + this[s]) % t; return i }, i.prototype.millerRabin = function (t) { var e = this.subtract(i.ONE), r = e.getLowestSetBit(); if (r <= 0) return !1; var n = e.shiftRight(r); (t = t + 1 >> 1) > E.length && (t = E.length); for (var o = s(), h = 0; h < t; ++h) { o.fromInt(E[Math.floor(Math.random() * E.length)]); var a = o.modPow(n, this); if (0 != a.compareTo(i.ONE) && 0 != a.compareTo(e)) { for (var u = 1; u++ < r && 0 != a.compareTo(e);)if (0 == (a = a.modPowInt(2, this)).compareTo(i.ONE)) return !1; if (0 != a.compareTo(e)) return !1 } } return !0 }, i.prototype.clone = function () { var t = s(); return this.copyTo(t), t }, i.prototype.intValue = function () { if (this.s < 0) { if (1 == this.t) return this[0] - this.DV; if (0 == this.t) return -1 } else { if (1 == this.t) return this[0]; if (0 == this.t) return 0 } return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0] }, i.prototype.byteValue = function () { return 0 == this.t ? this.s : this[0] << 24 >> 24 }, i.prototype.shortValue = function () { return 0 == this.t ? this.s : this[0] << 16 >> 16 }, i.prototype.signum = function () { return this.s < 0 ? -1 : this.t <= 0 || 1 == this.t && this[0] <= 0 ? 0 : 1 }, i.prototype.toByteArray = function () { var t = this.t, e = new Array; e[0] = this.s; var i, s = this.DB - t * this.DB % 8, r = 0; if (t-- > 0) for (s < this.DB && (i = this[t] >> s) != (this.s & this.DM) >> s && (e[r++] = i | this.s << this.DB - s); t >= 0;)s < 8 ? (i = (this[t] & (1 << s) - 1) << 8 - s, i |= this[--t] >> (s += this.DB - 8)) : (i = this[t] >> (s -= 8) & 255, s <= 0 && (s += this.DB, --t)), 0 != (128 & i) && (i |= -256), 0 == r && (128 & this.s) != (128 & i) && ++r, (r > 0 || i != this.s) && (e[r++] = i); return e }, i.prototype.equals = function (t) { return 0 == this.compareTo(t) }, i.prototype.min = function (t) { return this.compareTo(t) < 0 ? this : t }, i.prototype.max = function (t) { return this.compareTo(t) > 0 ? this : t }, i.prototype.and = function (t) { var e = s(); return this.bitwiseTo(t, g, e), e }, i.prototype.or = function (t) { var e = s(); return this.bitwiseTo(t, d, e), e }, i.prototype.xor = function (t) { var e = s(); return this.bitwiseTo(t, m, e), e }, i.prototype.andNot = function (t) { var e = s(); return this.bitwiseTo(t, v, e), e }, i.prototype.not = function () { for (var t = s(), e = 0; e < this.t; ++e)t[e] = this.DM & ~this[e]; return t.t = this.t, t.s = ~this.s, t }, i.prototype.shiftLeft = function (t) { var e = s(); return t < 0 ? this.rShiftTo(-t, e) : this.lShiftTo(t, e), e }, i.prototype.shiftRight = function (t) { var e = s(); return t < 0 ? this.lShiftTo(-t, e) : this.rShiftTo(t, e), e }, i.prototype.getLowestSetBit = function () { for (var t = 0; t < this.t; ++t)if (0 != this[t]) return t * this.DB + y(this[t]); return this.s < 0 ? this.t * this.DB : -1 }, i.prototype.bitCount = function () { for (var t = 0, e = this.s & this.DM, i = 0; i < this.t; ++i)t += T(this[i] ^ e); return t }, i.prototype.testBit = function (t) { var e = Math.floor(t / this.DB); return e >= this.t ? 0 != this.s : 0 != (this[e] & 1 << t % this.DB) }, i.prototype.setBit = function (t) { return this.changeBit(t, d) }, i.prototype.clearBit = function (t) { return this.changeBit(t, v) }, i.prototype.flipBit = function (t) { return this.changeBit(t, m) }, i.prototype.add = function (t) { var e = s(); return this.addTo(t, e), e }, i.prototype.subtract = function (t) { var e = s(); return this.subTo(t, e), e }, i.prototype.multiply = function (t) { var e = s(); return this.multiplyTo(t, e), e }, i.prototype.divide = function (t) { var e = s(); return this.divRemTo(t, e, null), e }, i.prototype.remainder = function (t) { var e = s(); return this.divRemTo(t, null, e), e }, i.prototype.divideAndRemainder = function (t) { var e = s(), i = s(); return this.divRemTo(t, e, i), new Array(e, i) }, i.prototype.modPow = function (t, e) { var i, r, n = t.bitLength(), o = c(1); if (n <= 0) return o; i = n < 18 ? 1 : n < 48 ? 3 : n < 144 ? 4 : n < 768 ? 5 : 6, r = n < 8 ? new p(e) : e.isEven() ? new D(e) : new l(e); var h = new Array, a = 3, u = i - 1, g = (1 << i) - 1; if (h[1] = r.convert(this), i > 1) { var d = s(); for (r.sqrTo(h[1], d); a <= g;)h[a] = s(), r.mulTo(d, h[a - 2], h[a]), a += 2 } var m, v, y = t.t - 1, T = !0, b = s(); for (n = f(t[y]) - 1; y >= 0;) { for (n >= u ? m = t[y] >> n - u & g : (m = (t[y] & (1 << n + 1) - 1) << u - n, y > 0 && (m |= t[y - 1] >> this.DB + n - u)), a = i; 0 == (1 & m);)m >>= 1, --a; if ((n -= a) < 0 && (n += this.DB, --y), T) h[m].copyTo(o), T = !1; else { for (; a > 1;)r.sqrTo(o, b), r.sqrTo(b, o), a -= 2; a > 0 ? r.sqrTo(o, b) : (v = o, o = b, b = v), r.mulTo(b, h[m], o) } for (; y >= 0 && 0 == (t[y] & 1 << n);)r.sqrTo(o, b), v = o, o = b, b = v, --n < 0 && (n = this.DB - 1, --y) } return r.revert(o) }, i.prototype.modInverse = function (t) { var e = t.isEven(); if (this.isEven() && e || 0 == t.signum()) return i.ZERO; for (var s = t.clone(), r = this.clone(), n = c(1), o = c(0), h = c(0), a = c(1); 0 != s.signum();) { for (; s.isEven();)s.rShiftTo(1, s), e ? (n.isEven() && o.isEven() || (n.addTo(this, n), o.subTo(t, o)), n.rShiftTo(1, n)) : o.isEven() || o.subTo(t, o), o.rShiftTo(1, o); for (; r.isEven();)r.rShiftTo(1, r), e ? (h.isEven() && a.isEven() || (h.addTo(this, h), a.subTo(t, a)), h.rShiftTo(1, h)) : a.isEven() || a.subTo(t, a), a.rShiftTo(1, a); s.compareTo(r) >= 0 ? (s.subTo(r, s), e && n.subTo(h, n), o.subTo(a, o)) : (r.subTo(s, r), e && h.subTo(n, h), a.subTo(o, a)) } return 0 != r.compareTo(i.ONE) ? i.ZERO : a.compareTo(t) >= 0 ? a.subtract(t) : a.signum() < 0 ? (a.addTo(t, a), a.signum() < 0 ? a.add(t) : a) : a }, i.prototype.pow = function (t) { return this.exp(t, new b) }, i.prototype.gcd = function (t) { var e = this.s < 0 ? this.negate() : this.clone(), i = t.s < 0 ? t.negate() : t.clone(); if (e.compareTo(i) < 0) { var s = e; e = i, i = s } var r = e.getLowestSetBit(), n = i.getLowestSetBit(); if (n < 0) return e; for (r < n && (n = r), n > 0 && (e.rShiftTo(n, e), i.rShiftTo(n, i)); e.signum() > 0;)(r = e.getLowestSetBit()) > 0 && e.rShiftTo(r, e), (r = i.getLowestSetBit()) > 0 && i.rShiftTo(r, i), e.compareTo(i) >= 0 ? (e.subTo(i, e), e.rShiftTo(1, e)) : (i.subTo(e, i), i.rShiftTo(1, i)); return n > 0 && i.lShiftTo(n, i), i }, i.prototype.isProbablePrime = function (t) { var e, i = this.abs(); if (1 == i.t && i[0] <= E[E.length - 1]) { for (e = 0; e < E.length; ++e)if (i[0] == E[e]) return !0; return !1 } if (i.isEven()) return !1; for (e = 1; e < E.length;) { for (var s = E[e], r = e + 1; r < E.length && s < x;)s *= E[r++]; for (s = i.modInt(s); e < r;)if (s % E[e++] == 0) return !1 } return i.millerRabin(t) }, i.prototype.square = function () { var t = s(); return this.squareTo(t), t }, w.prototype.init = function (t) { var e, i, s; for (e = 0; e < 256; ++e)this.S[e] = e; for (i = 0, e = 0; e < 256; ++e)i = i + this.S[e] + t[e % t.length] & 255, s = this.S[e], this.S[e] = this.S[i], this.S[i] = s; this.i = 0, this.j = 0 }, w.prototype.next = function () { var t; return this.i = this.i + 1 & 255, this.j = this.j + this.S[this.i] & 255, t = this.S[this.i], this.S[this.i] = this.S[this.j], this.S[this.j] = t, this.S[t + this.S[this.i] & 255] }; var O, B, A, V = 256; if (null == B) { var R; B = new Array, A = 0; var N = new Uint32Array(256); for (function (t) { for (var e = 0, i = t.length; e < i; e++)t[e] = Math.floor(256 * Math.random()) }(N), R = 0; R < N.length; ++R)B[A++] = 255 & N[R] } function M() { if (null == O) { for (O = new w; A < V;) { var t = Math.floor(65536 * Math.random()); B[A++] = 255 & t } for (O.init(B), A = 0; A < B.length; ++A)B[A] = 0; A = 0 } return O.next() } function I() { } function L(t, e) { return new i(t, e) } function P() { this.n = null, this.e = 0, this.d = null, this.p = null, this.q = null, this.dmp1 = null, this.dmq1 = null, this.coeff = null } I.prototype.nextBytes = function (t) { var e; for (e = 0; e < t.length; ++e)t[e] = M() }, P.prototype.doPublic = function (t) { return t.modPowInt(this.e, this.n) }, P.prototype.setPublic = function (t, e) { null != t && null != e && t.length > 0 && e.length > 0 ? (this.n = L(t, 16), this.e = parseInt(e, 16)) : console.error("Invalid RSA public key") }, P.prototype.encrypt = function (t) { var e = function (t, e) { if (e < t.length + 11) return console.error("Message too long for RSA"), null; for (var s = new Array, r = t.length - 1; r >= 0 && e > 0;) { var n = t.charCodeAt(r--); n < 128 ? s[--e] = n : n > 127 && n < 2048 ? (s[--e] = 63 & n | 128, s[--e] = n >> 6 | 192) : (s[--e] = 63 & n | 128, s[--e] = n >> 6 & 63 | 128, s[--e] = n >> 12 | 224) } s[--e] = 0; for (var o = new I, h = new Array; e > 2;) { for (h[0] = 0; 0 == h[0];)o.nextBytes(h); s[--e] = h[0] } return s[--e] = 2, s[--e] = 0, new i(s) }(t, this.n.bitLength() + 7 >> 3); if (null == e) return null; var s = this.doPublic(e); if (null == s) return null; var r = s.toString(16), n = ""; if (n = 0 == (1 & r.length) ? C(r) : C("0" + r), t.match(/\w+/g) != t) return n; if (10 * t.length > n.length) return n; for (var o = 1; o < t.length + 1; o++)n = n.substring(0, 9 * o) + t[o - 1] + n.substring(9 * o + 1, n.length); return n }, P.prototype.generate = function (t, e) { var s = new I, r = t >> 1; this.e = parseInt(e, 16); for (var n = new i(e, 16); ;) { for (; this.p = new i(t - r, 1, s), 0 != this.p.subtract(i.ONE).gcd(n).compareTo(i.ONE) || !this.p.isProbablePrime(10);); for (; this.q = new i(r, 1, s), 0 != this.q.subtract(i.ONE).gcd(n).compareTo(i.ONE) || !this.q.isProbablePrime(10);); if (this.p.compareTo(this.q) <= 0) { var o = this.p; this.p = this.q, this.q = o } var h = this.p.subtract(i.ONE), a = this.q.subtract(i.ONE), u = h.multiply(a); if (0 == u.gcd(n).compareTo(i.ONE)) { this.n = this.p.multiply(this.q), this.d = n.modInverse(u), this.dmp1 = this.d.mod(h), this.dmq1 = this.d.mod(a), this.coeff = this.q.modInverse(this.p); break } } }, function () { P.prototype.generateAsync = function (t, e, r) { var n = new I, o = t >> 1; this.e = parseInt(e, 16); var h = new i(e, 16), a = this, u = function () { var e = function () { if (a.p.compareTo(a.q) <= 0) { var t = a.p; a.p = a.q, a.q = t } var e = a.p.subtract(i.ONE), s = a.q.subtract(i.ONE), n = e.multiply(s); 0 == n.gcd(h).compareTo(i.ONE) ? (a.n = a.p.multiply(a.q), a.d = h.modInverse(n), a.dmp1 = a.d.mod(e), a.dmq1 = a.d.mod(s), a.coeff = a.q.modInverse(a.p), setTimeout(function () { r() }, 0)) : setTimeout(u, 0) }, c = function () { a.q = s(), a.q.fromNumberAsync(o, 1, n, function () { a.q.subtract(i.ONE).gcda(h, function (t) { 0 == t.compareTo(i.ONE) && a.q.isProbablePrime(10) ? setTimeout(e, 0) : setTimeout(c, 0) }) }) }, f = function () { a.p = s(), a.p.fromNumberAsync(t - o, 1, n, function () { a.p.subtract(i.ONE).gcda(h, function (t) { 0 == t.compareTo(i.ONE) && a.p.isProbablePrime(10) ? setTimeout(c, 0) : setTimeout(f, 0) }) }) }; setTimeout(f, 0) }; setTimeout(u, 0) }; i.prototype.gcda = function (t, e) { var i = this.s < 0 ? this.negate() : this.clone(), s = t.s < 0 ? t.negate() : t.clone(); if (i.compareTo(s) < 0) { var r = i; i = s, s = r } var n = i.getLowestSetBit(), o = s.getLowestSetBit(); if (o < 0) e(i); else { n < o && (o = n), o > 0 && (i.rShiftTo(o, i), s.rShiftTo(o, s)); var h = function () { (n = i.getLowestSetBit()) > 0 && i.rShiftTo(n, i), (n = s.getLowestSetBit()) > 0 && s.rShiftTo(n, s), i.compareTo(s) >= 0 ? (i.subTo(s, i), i.rShiftTo(1, i)) : (s.subTo(i, s), s.rShiftTo(1, s)), i.signum() > 0 ? setTimeout(h, 0) : (o > 0 && s.lShiftTo(o, s), setTimeout(function () { e(s) }, 0)) }; setTimeout(h, 10) } }; i.prototype.fromNumberAsync = function (t, e, s, r) { if ("number" == typeof e) if (t < 2) this.fromInt(1); else { this.fromNumber(t, s), this.testBit(t - 1) || this.bitwiseTo(i.ONE.shiftLeft(t - 1), d, this), this.isEven() && this.dAddOffset(1, 0); var n = this, o = function () { n.dAddOffset(2, 0), n.bitLength() > t && n.subTo(i.ONE.shiftLeft(t - 1), n), n.isProbablePrime(e) ? setTimeout(function () { r() }, 0) : setTimeout(o, 0) }; setTimeout(o, 0) } else { var h = new Array, a = 7 & t; h.length = 1 + (t >> 3), e.nextBytes(h), a > 0 ? h[0] &= (1 << a) - 1 : h[0] = 0, this.fromString(h, 256) } } }(); var H = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", q = "="; function C(t) { var e, i, s = ""; for (e = 0; e + 3 <= t.length; e += 3)i = parseInt(t.substring(e, e + 3), 16), s += H.charAt(i >> 6) + H.charAt(63 & i); for (e + 1 == t.length ? (i = parseInt(t.substring(e, e + 1), 16), s += H.charAt(i << 2)) : e + 2 == t.length && (i = parseInt(t.substring(e, e + 2), 16), s += H.charAt(i >> 2) + H.charAt((3 & i) << 4)); (3 & s.length) > 0;)s += q; return s } var j = j || {}; j.env = j.env || {}; var F = j, k = Object.prototype, U = ["toString", "valueOf"]; j.env.parseUA = function (t) { var e = { ie: 0, opera: 0, gecko: 0, webkit: 0, chrome: 0, mobile: null, air: 0, ipad: 0, iphone: 0, ipod: 0, ios: null, android: 0, webos: 0, secure: !1, os: null }; return e.secure = !0, e }, j.env.ua = j.env.parseUA(), j.isFunction = function (t) { return "function" == typeof t || "[object Function]" === k.toString.apply(t) }, j._IEEnumFix = j.env.ua.ie ? function (t, e) { var i, s, r; for (i = 0; i < U.length; i += 1)r = e[s = U[i]], F.isFunction(r) && r != k[s] && (t[s] = r) } : function () { }, j.extend = function (t, e, i) { if (!e || !t) throw new Error("extend failed, please check that all dependencies are included."); var s, r = function () { }; if (r.prototype = e.prototype, t.prototype = new r, t.prototype.constructor = t, t.superclass = e.prototype, e.prototype.constructor == k.constructor && (e.prototype.constructor = e), i) { for (s in i) F.hasOwnProperty(i, s) && (t.prototype[s] = i[s]); F._IEEnumFix(t.prototype, i) } }; var _ = {}; void 0 !== _.asn1 && _.asn1 || (_.asn1 = {}), _.asn1.ASN1Util = new function () { this.integerToByteHex = function (t) { var e = t.toString(16); return e.length % 2 == 1 && (e = "0" + e), e }, this.bigIntToMinTwosComplementsHex = function (t) { var e = t.toString(16); if ("-" != e.substr(0, 1)) e.length % 2 == 1 ? e = "0" + e : e.match(/^[0-7]/) || (e = "00" + e); else { var s = e.substr(1).length; s % 2 == 1 ? s += 1 : e.match(/^[0-7]/) || (s += 2); for (var r = "", n = 0; n < s; n++)r += "f"; e = new i(r, 16).xor(t).add(i.ONE).toString(16).replace(/^-/, "") } return e }, this.getPEMStringFromHex = function (t, e) { var i = CryptoJS.enc.Hex.parse(t), s = CryptoJS.enc.Base64.stringify(i).replace(/(.{64})/g, "$1\r\n"); return "-----BEGIN " + e + "-----\r\n" + (s = s.replace(/\r\n$/, "")) + "\r\n-----END " + e + "-----\r\n" } }, _.asn1.ASN1Object = function () { this.getLengthHexFromValue = function () { if (void 0 === this.hV || null == this.hV) throw "this.hV is null or undefined."; if (this.hV.length % 2 == 1) throw "value hex must be even length: n=" + "".length + ",v=" + this.hV; var t = this.hV.length / 2, e = t.toString(16); if (e.length % 2 == 1 && (e = "0" + e), t < 128) return e; var i = e.length / 2; if (i > 15) throw "ASN.1 length too long to represent by 8x: n = " + t.toString(16); return (128 + i).toString(16) + e }, this.getEncodedHex = function () { return (null == this.hTLV || this.isModified) && (this.hV = this.getFreshValueHex(), this.hL = this.getLengthHexFromValue(), this.hTLV = this.hT + this.hL + this.hV, this.isModified = !1), this.hTLV }, this.getValueHex = function () { return this.getEncodedHex(), this.hV }, this.getFreshValueHex = function () { return "" } }, _.asn1.DERAbstractString = function (t) { _.asn1.DERAbstractString.superclass.constructor.call(this); this.getString = function () { return this.s }, this.setString = function (t) { this.hTLV = null, this.isModified = !0, this.s = t, this.hV = stohex(this.s) }, this.setStringHex = function (t) { this.hTLV = null, this.isModified = !0, this.s = null, this.hV = t }, this.getFreshValueHex = function () { return this.hV }, void 0 !== t && (void 0 !== t.str ? this.setString(t.str) : void 0 !== t.hex && this.setStringHex(t.hex)) }, j.extend(_.asn1.DERAbstractString, _.asn1.ASN1Object), _.asn1.DERAbstractTime = function (t) { _.asn1.DERAbstractTime.superclass.constructor.call(this); this.localDateToUTC = function (t) { return utc = t.getTime() + 6e4 * t.getTimezoneOffset(), new Date(utc) }, this.formatDate = function (t, e) { var i = this.zeroPadding, s = this.localDateToUTC(t), r = String(s.getFullYear()); return "utc" == e && (r = r.substr(2, 2)), r + i(String(s.getMonth() + 1), 2) + i(String(s.getDate()), 2) + i(String(s.getHours()), 2) + i(String(s.getMinutes()), 2) + i(String(s.getSeconds()), 2) + "Z" }, this.zeroPadding = function (t, e) { return t.length >= e ? t : new Array(e - t.length + 1).join("0") + t }, this.getString = function () { return this.s }, this.setString = function (t) { this.hTLV = null, this.isModified = !0, this.s = t, this.hV = stohex(this.s) }, this.setByDateValue = function (t, e, i, s, r, n) { var o = new Date(Date.UTC(t, e - 1, i, s, r, n, 0)); this.setByDate(o) }, this.getFreshValueHex = function () { return this.hV } }, j.extend(_.asn1.DERAbstractTime, _.asn1.ASN1Object), _.asn1.DERAbstractStructured = function (t) { _.asn1.DERAbstractString.superclass.constructor.call(this); this.setByASN1ObjectArray = function (t) { this.hTLV = null, this.isModified = !0, this.asn1Array = t }, this.appendASN1Object = function (t) { this.hTLV = null, this.isModified = !0, this.asn1Array.push(t) }, this.asn1Array = new Array, void 0 !== t && void 0 !== t.array && (this.asn1Array = t.array) }, j.extend(_.asn1.DERAbstractStructured, _.asn1.ASN1Object), _.asn1.DERBoolean = function () { _.asn1.DERBoolean.superclass.constructor.call(this), this.hT = "01", this.hTLV = "0101ff" }, j.extend(_.asn1.DERBoolean, _.asn1.ASN1Object), _.asn1.DERInteger = function (t) { _.asn1.DERInteger.superclass.constructor.call(this), this.hT = "02", this.setByBigInteger = function (t) { this.hTLV = null, this.isModified = !0, this.hV = _.asn1.ASN1Util.bigIntToMinTwosComplementsHex(t) }, this.setByInteger = function (t) { var e = new i(String(t), 10); this.setByBigInteger(e) }, this.setValueHex = function (t) { this.hV = t }, this.getFreshValueHex = function () { return this.hV }, void 0 !== t && (void 0 !== t.bigint ? this.setByBigInteger(t.bigint) : void 0 !== t.int ? this.setByInteger(t.int) : void 0 !== t.hex && this.setValueHex(t.hex)) }, j.extend(_.asn1.DERInteger, _.asn1.ASN1Object), _.asn1.DERBitString = function (t) { _.asn1.DERBitString.superclass.constructor.call(this), this.hT = "03", this.setHexValueIncludingUnusedBits = function (t) { this.hTLV = null, this.isModified = !0, this.hV = t }, this.setUnusedBitsAndHexValue = function (t, e) { if (t < 0 || 7 < t) throw "unused bits shall be from 0 to 7: u = " + t; var i = "0" + t; this.hTLV = null, this.isModified = !0, this.hV = i + e }, this.setByBinaryString = function (t) { var e = 8 - (t = t.replace(/0+$/, "")).length % 8; 8 == e && (e = 0); for (var i = 0; i <= e; i++)t += "0"; var s = ""; for (i = 0; i < t.length - 1; i += 8) { var r = t.substr(i, 8), n = parseInt(r, 2).toString(16); 1 == n.length && (n = "0" + n), s += n } this.hTLV = null, this.isModified = !0, this.hV = "0" + e + s }, this.setByBooleanArray = function (t) { for (var e = "", i = 0; i < t.length; i++)1 == t[i] ? e += "1" : e += "0"; this.setByBinaryString(e) }, this.newFalseArray = function (t) { for (var e = new Array(t), i = 0; i < t; i++)e[i] = !1; return e }, this.getFreshValueHex = function () { return this.hV }, void 0 !== t && (void 0 !== t.hex ? this.setHexValueIncludingUnusedBits(t.hex) : void 0 !== t.bin ? this.setByBinaryString(t.bin) : void 0 !== t.array && this.setByBooleanArray(t.array)) }, j.extend(_.asn1.DERBitString, _.asn1.ASN1Object), _.asn1.DEROctetString = function (t) { _.asn1.DEROctetString.superclass.constructor.call(this, t), this.hT = "04" }, j.extend(_.asn1.DEROctetString, _.asn1.DERAbstractString), _.asn1.DERNull = function () { _.asn1.DERNull.superclass.constructor.call(this), this.hT = "05", this.hTLV = "0500" }, j.extend(_.asn1.DERNull, _.asn1.ASN1Object), _.asn1.DERObjectIdentifier = function (t) { var e = function (t) { var e = t.toString(16); return 1 == e.length && (e = "0" + e), e }, s = function (t) { var s = "", r = new i(t, 10).toString(2), n = 7 - r.length % 7; 7 == n && (n = 0); for (var o = "", h = 0; h < n; h++)o += "0"; r = o + r; for (h = 0; h < r.length - 1; h += 7) { var a = r.substr(h, 7); h != r.length - 7 && (a = "1" + a), s += e(parseInt(a, 2)) } return s }; _.asn1.DERObjectIdentifier.superclass.constructor.call(this), this.hT = "06", this.setValueHex = function (t) { this.hTLV = null, this.isModified = !0, this.s = null, this.hV = t }, this.setValueOidString = function (t) { if (!t.match(/^[0-9.]+$/)) throw "malformed oid string: " + t; var i = "", r = t.split("."), n = 40 * parseInt(r[0]) + parseInt(r[1]); i += e(n), r.splice(0, 2); for (var o = 0; o < r.length; o++)i += s(r[o]); this.hTLV = null, this.isModified = !0, this.s = null, this.hV = i }, this.setValueName = function (t) { if (void 0 === _.asn1.x509.OID.name2oidList[t]) throw "DERObjectIdentifier oidName undefined: " + t; var e = _.asn1.x509.OID.name2oidList[t]; this.setValueOidString(e) }, this.getFreshValueHex = function () { return this.hV }, void 0 !== t && (void 0 !== t.oid ? this.setValueOidString(t.oid) : void 0 !== t.hex ? this.setValueHex(t.hex) : void 0 !== t.name && this.setValueName(t.name)) }, j.extend(_.asn1.DERObjectIdentifier, _.asn1.ASN1Object), _.asn1.DERUTF8String = function (t) { _.asn1.DERUTF8String.superclass.constructor.call(this, t), this.hT = "0c" }, j.extend(_.asn1.DERUTF8String, _.asn1.DERAbstractString), _.asn1.DERNumericString = function (t) { _.asn1.DERNumericString.superclass.constructor.call(this, t), this.hT = "12" }, j.extend(_.asn1.DERNumericString, _.asn1.DERAbstractString), _.asn1.DERPrintableString = function (t) { _.asn1.DERPrintableString.superclass.constructor.call(this, t), this.hT = "13" }, j.extend(_.asn1.DERPrintableString, _.asn1.DERAbstractString), _.asn1.DERTeletexString = function (t) { _.asn1.DERTeletexString.superclass.constructor.call(this, t), this.hT = "14" }, j.extend(_.asn1.DERTeletexString, _.asn1.DERAbstractString), _.asn1.DERIA5String = function (t) { _.asn1.DERIA5String.superclass.constructor.call(this, t), this.hT = "16" }, j.extend(_.asn1.DERIA5String, _.asn1.DERAbstractString), _.asn1.DERUTCTime = function (t) { _.asn1.DERUTCTime.superclass.constructor.call(this, t), this.hT = "17", this.setByDate = function (t) { this.hTLV = null, this.isModified = !0, this.date = t, this.s = this.formatDate(this.date, "utc"), this.hV = stohex(this.s) }, void 0 !== t && (void 0 !== t.str ? this.setString(t.str) : void 0 !== t.hex ? this.setStringHex(t.hex) : void 0 !== t.date && this.setByDate(t.date)) }, j.extend(_.asn1.DERUTCTime, _.asn1.DERAbstractTime), _.asn1.DERGeneralizedTime = function (t) { _.asn1.DERGeneralizedTime.superclass.constructor.call(this, t), this.hT = "18", this.setByDate = function (t) { this.hTLV = null, this.isModified = !0, this.date = t, this.s = this.formatDate(this.date, "gen"), this.hV = stohex(this.s) }, void 0 !== t && (void 0 !== t.str ? this.setString(t.str) : void 0 !== t.hex ? this.setStringHex(t.hex) : void 0 !== t.date && this.setByDate(t.date)) }, j.extend(_.asn1.DERGeneralizedTime, _.asn1.DERAbstractTime), _.asn1.DERSequence = function (t) { _.asn1.DERSequence.superclass.constructor.call(this, t), this.hT = "30", this.getFreshValueHex = function () { for (var t = "", e = 0; e < this.asn1Array.length; e++) { t += this.asn1Array[e].getEncodedHex() } return this.hV = t, this.hV } }, j.extend(_.asn1.DERSequence, _.asn1.DERAbstractStructured), _.asn1.DERSet = function (t) { _.asn1.DERSet.superclass.constructor.call(this, t), this.hT = "31", this.getFreshValueHex = function () { for (var t = new Array, e = 0; e < this.asn1Array.length; e++) { var i = this.asn1Array[e]; t.push(i.getEncodedHex()) } return t.sort(), this.hV = t.join(""), this.hV } }, j.extend(_.asn1.DERSet, _.asn1.DERAbstractStructured), _.asn1.DERTaggedObject = function (t) { _.asn1.DERTaggedObject.superclass.constructor.call(this), this.hT = "a0", this.hV = "", this.isExplicit = !0, this.asn1Object = null, this.setASN1Object = function (t, e, i) { this.hT = e, this.isExplicit = t, this.asn1Object = i, this.isExplicit ? (this.hV = this.asn1Object.getEncodedHex(), this.hTLV = null, this.isModified = !0) : (this.hV = null, this.hTLV = i.getEncodedHex(), this.hTLV = this.hTLV.replace(/^../, e), this.isModified = !1) }, this.getFreshValueHex = function () { return this.hV }, void 0 !== t && (void 0 !== t.tag && (this.hT = t.tag), void 0 !== t.explicit && (this.isExplicit = t.explicit), void 0 !== t.obj && (this.asn1Object = t.obj, this.setASN1Object(this.isExplicit, this.hT, this.asn1Object))) }, j.extend(_.asn1.DERTaggedObject, _.asn1.ASN1Object), function (t) { "use strict"; var e, i = {}; i.decode = function (t) { var i; if (void 0 === e) { var s = "0123456789ABCDEF", r = " \f\n\r\t \u2028\u2029"; for (e = [], i = 0; i < 16; ++i)e[s.charAt(i)] = i; for (s = s.toLowerCase(), i = 10; i < 16; ++i)e[s.charAt(i)] = i; for (i = 0; i < r.length; ++i)e[r.charAt(i)] = -1 } var n = [], o = 0, h = 0; for (i = 0; i < t.length; ++i) { var a = t.charAt(i); if ("=" == a) break; if (-1 != (a = e[a])) { if (void 0 === a) throw "Illegal character at offset " + i; o |= a, ++h >= 2 ? (n[n.length] = o, o = 0, h = 0) : o <<= 4 } } if (h) throw "Hex encoding incomplete: 4 bits missing"; return n }, win.Hex = i }(), function (t) { "use strict"; var e, i = {}; i.decode = function (t) { var i; if (void 0 === e) { var s = "= \f\n\r\t \u2028\u2029"; for (e = [], i = 0; i < 64; ++i)e["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(i)] = i; for (i = 0; i < s.length; ++i)e[s.charAt(i)] = -1 } var r = [], n = 0, o = 0; for (i = 0; i < t.length; ++i) { var h = t.charAt(i); if ("=" == h) break; if (-1 != (h = e[h])) { if (void 0 === h) throw "Illegal character at offset " + i; n |= h, ++o >= 4 ? (r[r.length] = n >> 16, r[r.length] = n >> 8 & 255, r[r.length] = 255 & n, n = 0, o = 0) : n <<= 6 } } switch (o) { case 1: throw "Base64 encoding incomplete: at least 2 bits missing"; case 2: r[r.length] = n >> 10; break; case 3: r[r.length] = n >> 16, r[r.length] = n >> 8 & 255 }return r }, i.re = /-----BEGIN [^-]+-----([A-Za-z0-9+\/=\s]+)-----END [^-]+-----|begin-base64[^\n]+\n([A-Za-z0-9+\/=\s]+)====/, i.unarmor = function (t) { var e = i.re.exec(t); if (e) if (e[1]) t = e[1]; else { if (!e[2]) throw "RegExp out of sync"; t = e[2] } return i.decode(t) }, win.Base64 = i }(), function (t) { "use strict"; function e(t, i) { t instanceof e ? (this.enc = t.enc, this.pos = t.pos) : (this.enc = t, this.pos = i) } function i(t, e, i, s, r) { this.stream = t, this.header = e, this.length = i, this.tag = s, this.sub = r } e.prototype.get = function (e) { if (e === t && (e = this.pos++), e >= this.enc.length) throw "Requesting byte offset " + e + " on a stream of length " + this.enc.length; return this.enc[e] }, e.prototype.hexDigits = "0123456789ABCDEF", e.prototype.hexByte = function (t) { return this.hexDigits.charAt(t >> 4 & 15) + this.hexDigits.charAt(15 & t) }, e.prototype.hexDump = function (t, e, i) { for (var s = "", r = t; r < e; ++r)if (s += this.hexByte(this.get(r)), !0 !== i) switch (15 & r) { case 7: s += "  "; break; case 15: s += "\n"; break; default: s += " " }return s }, e.prototype.parseStringISO = function (t, e) { for (var i = "", s = t; s < e; ++s)i += String.fromCharCode(this.get(s)); return i }, e.prototype.parseStringUTF = function (t, e) { for (var i = "", s = t; s < e;) { var r = this.get(s++); i += r < 128 ? String.fromCharCode(r) : r > 191 && r < 224 ? String.fromCharCode((31 & r) << 6 | 63 & this.get(s++)) : String.fromCharCode((15 & r) << 12 | (63 & this.get(s++)) << 6 | 63 & this.get(s++)) } return i }, e.prototype.parseStringBMP = function (t, e) { for (var i = "", s = t; s < e; s += 2) { var r = this.get(s), n = this.get(s + 1); i += String.fromCharCode((r << 8) + n) } return i }, e.prototype.reTime = /^((?:1[89]|2\d)?\d\d)(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])([01]\d|2[0-3])(?:([0-5]\d)(?:([0-5]\d)(?:[.,](\d{1,3}))?)?)?(Z|[-+](?:[0]\d|1[0-2])([0-5]\d)?)?$/, e.prototype.parseTime = function (t, e) { var i = this.parseStringISO(t, e), s = this.reTime.exec(i); return s ? (i = s[1] + "-" + s[2] + "-" + s[3] + " " + s[4], s[5] && (i += ":" + s[5], s[6] && (i += ":" + s[6], s[7] && (i += "." + s[7]))), s[8] && (i += " UTC", "Z" != s[8] && (i += s[8], s[9] && (i += ":" + s[9]))), i) : "Unrecognized time: " + i }, e.prototype.parseInteger = function (t, e) { var i = e - t; if (i > 4) { i <<= 3; var s = this.get(t); if (0 === s) i -= 8; else for (; s < 128;)s <<= 1, --i; return "(" + i + " bit)" } for (var r = 0, n = t; n < e; ++n)r = r << 8 | this.get(n); return r }, e.prototype.parseBitString = function (t, e) { var i = this.get(t), s = (e - t - 1 << 3) - i, r = "(" + s + " bit)"; if (s <= 20) { var n = i; r += " "; for (var o = e - 1; o > t; --o) { for (var h = this.get(o), a = n; a < 8; ++a)r += h >> a & 1 ? "1" : "0"; n = 0 } } return r }, e.prototype.parseOctetString = function (t, e) { var i = e - t, s = "(" + i + " byte) "; i > 100 && (e = t + 100); for (var r = t; r < e; ++r)s += this.hexByte(this.get(r)); return i > 100 && (s += "…"), s }, e.prototype.parseOID = function (t, e) { for (var i = "", s = 0, r = 0, n = t; n < e; ++n) { var o = this.get(n); if (s = s << 7 | 127 & o, r += 7, !(128 & o)) { if ("" === i) { var h = s < 80 ? s < 40 ? 0 : 1 : 2; i = h + "." + (s - 40 * h) } else i += "." + (r >= 31 ? "bigint" : s); s = r = 0 } } return i }, i.prototype.typeName = function () { if (this.tag === t) return "unknown"; var e = this.tag >> 6, i = (this.tag, 31 & this.tag); switch (e) { case 0: switch (i) { case 0: return "EOC"; case 1: return "BOOLEAN"; case 2: return "INTEGER"; case 3: return "BIT_STRING"; case 4: return "OCTET_STRING"; case 5: return "NULL"; case 6: return "OBJECT_IDENTIFIER"; case 7: return "ObjectDescriptor"; case 8: return "EXTERNAL"; case 9: return "REAL"; case 10: return "ENUMERATED"; case 11: return "EMBEDDED_PDV"; case 12: return "UTF8String"; case 16: return "SEQUENCE"; case 17: return "SET"; case 18: return "NumericString"; case 19: return "PrintableString"; case 20: return "TeletexString"; case 21: return "VideotexString"; case 22: return "IA5String"; case 23: return "UTCTime"; case 24: return "GeneralizedTime"; case 25: return "GraphicString"; case 26: return "VisibleString"; case 27: return "GeneralString"; case 28: return "UniversalString"; case 30: return "BMPString"; default: return "Universal_" + i.toString(16) }case 1: return "Application_" + i.toString(16); case 2: return "[" + i + "]"; case 3: return "Private_" + i.toString(16) } }, i.prototype.reSeemsASCII = /^[ -~]+$/, i.prototype.content = function () { if (this.tag === t) return null; var e = this.tag >> 6, i = 31 & this.tag, s = this.posContent(), r = Math.abs(this.length); if (0 !== e) { if (null !== this.sub) return "(" + this.sub.length + " elem)"; var n = this.stream.parseStringISO(s, s + Math.min(r, 100)); return this.reSeemsASCII.test(n) ? n.substring(0, 200) + (n.length > 200 ? "…" : "") : this.stream.parseOctetString(s, s + r) } switch (i) { case 1: return 0 === this.stream.get(s) ? "false" : "true"; case 2: return this.stream.parseInteger(s, s + r); case 3: return this.sub ? "(" + this.sub.length + " elem)" : this.stream.parseBitString(s, s + r); case 4: return this.sub ? "(" + this.sub.length + " elem)" : this.stream.parseOctetString(s, s + r); case 6: return this.stream.parseOID(s, s + r); case 16: case 17: return "(" + this.sub.length + " elem)"; case 12: return this.stream.parseStringUTF(s, s + r); case 18: case 19: case 20: case 21: case 22: case 26: return this.stream.parseStringISO(s, s + r); case 30: return this.stream.parseStringBMP(s, s + r); case 23: case 24: return this.stream.parseTime(s, s + r) }return null }, i.prototype.toString = function () { return this.typeName() + "@" + this.stream.pos + "[header:" + this.header + ",length:" + this.length + ",sub:" + (null === this.sub ? "null" : this.sub.length) + "]" }, i.prototype.print = function (e) { if (e === t && (e = ""), null !== this.sub) { e += "  "; for (var i = 0, s = this.sub.length; i < s; ++i)this.sub[i].print(e) } }, i.prototype.toPrettyString = function (e) { e === t && (e = ""); var i = e + this.typeName() + " @" + this.stream.pos; if (this.length >= 0 && (i += "+"), i += this.length, 32 & this.tag ? i += " (constructed)" : 3 != this.tag && 4 != this.tag || null === this.sub || (i += " (encapsulates)"), i += "\n", null !== this.sub) { e += "  "; for (var s = 0, r = this.sub.length; s < r; ++s)i += this.sub[s].toPrettyString(e) } return i }, i.prototype.toDOM = function () { var t = DOM.tag("div", "node"); t.asn1 = this; var e = DOM.tag("div", "head"), i = this.typeName().replace(/_/g, " "); e.innerHTML = i; var s = this.content(); if (null !== s) { s = String(s).replace(/</g, "&lt;"); var r = DOM.tag("span", "preview"); r.appendChild(DOM.text(s)), e.appendChild(r) } t.appendChild(e), this.node = t, this.head = e; var n = DOM.tag("div", "value"); if (i = "Offset: " + this.stream.pos + "<br/>", i += "Length: " + this.header + "+", this.length >= 0 ? i += this.length : i += -this.length + " (undefined)", 32 & this.tag ? i += "<br/>(constructed)" : 3 != this.tag && 4 != this.tag || null === this.sub || (i += "<br/>(encapsulates)"), null !== s && (i += "<br/>Value:<br/><b>" + s + "</b>", "object" == typeof oids && 6 == this.tag)) { var o = oids[s]; o && (o.d && (i += "<br/>" + o.d), o.c && (i += "<br/>" + o.c), o.w && (i += "<br/>(warning!)")) } n.innerHTML = i, t.appendChild(n); var h = DOM.tag("div", "sub"); if (null !== this.sub) for (var a = 0, u = this.sub.length; a < u; ++a)h.appendChild(this.sub[a].toDOM()); return t.appendChild(h), e.onclick = function () { t.className = "node collapsed" == t.className ? "node" : "node collapsed" }, t }, i.prototype.posStart = function () { return this.stream.pos }, i.prototype.posContent = function () { return this.stream.pos + this.header }, i.prototype.posEnd = function () { return this.stream.pos + this.header + Math.abs(this.length) }, i.prototype.fakeHover = function (t) { this.node.className += " hover", t && (this.head.className += " hover") }, i.prototype.fakeOut = function (t) { var e = / ?hover/; this.node.className = this.node.className.replace(e, ""), t && (this.head.className = this.head.className.replace(e, "")) }, i.prototype.toHexDOM_sub = function (t, e, i, s, r) { if (!(s >= r)) { var n = DOM.tag("span", e); n.appendChild(DOM.text(i.hexDump(s, r))), t.appendChild(n) } }, i.prototype.toHexDOM = function (e) { var i = DOM.tag("span", "hex"); if (e === t && (e = i), this.head.hexNode = i, this.head.onmouseover = function () { this.hexNode.className = "hexCurrent" }, this.head.onmouseout = function () { this.hexNode.className = "hex" }, i.asn1 = this, i.onmouseover = function () { var t = !e.selected; t && (e.selected = this.asn1, this.className = "hexCurrent"), this.asn1.fakeHover(t) }, i.onmouseout = function () { var t = e.selected == this.asn1; this.asn1.fakeOut(t), t && (e.selected = null, this.className = "hex") }, this.toHexDOM_sub(i, "tag", this.stream, this.posStart(), this.posStart() + 1), this.toHexDOM_sub(i, this.length >= 0 ? "dlen" : "ulen", this.stream, this.posStart() + 1, this.posContent()), null === this.sub) i.appendChild(DOM.text(this.stream.hexDump(this.posContent(), this.posEnd()))); else if (this.sub.length > 0) { var s = this.sub[0], r = this.sub[this.sub.length - 1]; this.toHexDOM_sub(i, "intro", this.stream, this.posContent(), s.posStart()); for (var n = 0, o = this.sub.length; n < o; ++n)i.appendChild(this.sub[n].toHexDOM(e)); this.toHexDOM_sub(i, "outro", this.stream, r.posEnd(), this.posEnd()) } return i }, i.prototype.toHexString = function (t) { return this.stream.hexDump(this.posStart(), this.posEnd(), !0) }, i.decodeLength = function (t) { var e = t.get(), i = 127 & e; if (i == e) return i; if (i > 3) throw "Length over 24 bits not supported at position " + (t.pos - 1); if (0 === i) return -1; e = 0; for (var s = 0; s < i; ++s)e = e << 8 | t.get(); return e }, i.hasContent = function (t, s, r) { if (32 & t) return !0; if (t < 3 || t > 4) return !1; var n = new e(r); if (3 == t && n.get(), n.get() >> 6 & 1) return !1; try { var o = i.decodeLength(n); return n.pos - r.pos + o == s } catch (t) { return !1 } }, i.decode = function (t) { t instanceof e || (t = new e(t, 0)); var s = new e(t), r = t.get(), n = i.decodeLength(t), o = t.pos - s.pos, h = null; if (i.hasContent(r, n, t)) { var a = t.pos; if (3 == r && t.get(), h = [], n >= 0) { for (var u = a + n; t.pos < u;)h[h.length] = i.decode(t); if (t.pos != u) throw "Content size is not correct for container starting at offset " + a } else try { for (; ;) { var c = i.decode(t); if (0 === c.tag) break; h[h.length] = c } n = a - t.pos } catch (t) { throw "Exception while decoding undefined length content: " + t } } else t.pos += n; return new i(s, o, n, r, h) }, i.test = function () { for (var t = [{ value: [39], expected: 39 }, { value: [129, 201], expected: 201 }, { value: [131, 254, 220, 186], expected: 16702650 }], s = 0, r = t.length; s < r; ++s) { var n = new e(t[s].value, 0); i.decodeLength(n) != t[s].expected && console.log("no document") } }, i.prototype.getHexStringValue = function () { var t = this.toHexString(), e = 2 * this.header, i = 2 * this.length; return t.substr(e, i) }, win.ASN1 = i }(), P.prototype.parseKey = function (t) { try { var e = 0, i = 0, s = /^\s*(?:[0-9A-Fa-f][0-9A-Fa-f]\s*)+$/.test(t) ? win.Hex.decode(t) : win.Base64.unarmor(t), r = win.ASN1.decode(s); if (3 === r.sub.length && (r = r.sub[2].sub[0]), 9 === r.sub.length) { e = r.sub[1].getHexStringValue(), this.n = L(e, 16), i = r.sub[2].getHexStringValue(), this.e = parseInt(i, 16); var n = r.sub[3].getHexStringValue(); this.d = L(n, 16); var o = r.sub[4].getHexStringValue(); this.p = L(o, 16); var h = r.sub[5].getHexStringValue(); this.q = L(h, 16); var a = r.sub[6].getHexStringValue(); this.dmp1 = L(a, 16); var u = r.sub[7].getHexStringValue(); this.dmq1 = L(u, 16); var c = r.sub[8].getHexStringValue(); this.coeff = L(c, 16) } else { if (2 !== r.sub.length) return !1; var f = r.sub[1].sub[0]; e = f.sub[0].getHexStringValue(), this.n = L(e, 16), i = f.sub[1].getHexStringValue(), this.e = parseInt(i, 16) } return !0 } catch (t) { return !1 } }, P.prototype.getPublicBaseKey = function () { var t = { array: [new _.asn1.DERObjectIdentifier({ oid: "1.2.840.113549.1.1.1" }), new _.asn1.DERNull] }, e = new _.asn1.DERSequence(t); return t = { array: [new _.asn1.DERInteger({ bigint: this.n }), new _.asn1.DERInteger({ int: this.e })] }, t = { hex: "00" + new _.asn1.DERSequence(t).getEncodedHex() }, t = { array: [e, new _.asn1.DERBitString(t)] }, new _.asn1.DERSequence(t).getEncodedHex() }, P.prototype.getPublicBaseKeyB64 = function () { return C(this.getPublicBaseKey()) }, P.prototype.wordwrap = function (t, e) { if (e = e || 64, !t) return t; var i = "(.{1," + e + "})( +|$\n?)|(.{1," + e + "})"; return t.match(RegExp(i, "g")).join("\n") }, P.prototype.getPublicKey = function () { var t = "-----BEGIN PUBLIC KEY-----\n"; return t += this.wordwrap(this.getPublicBaseKeyB64()) + "\n", t += "-----END PUBLIC KEY-----" }, P.prototype.hasPublicKeyProperty = function (t) { return (t = t || {}).hasOwnProperty("n") && t.hasOwnProperty("e") }, P.prototype.hasPrivateKeyProperty = function (t) { return (t = t || {}).hasOwnProperty("n") && t.hasOwnProperty("e") && t.hasOwnProperty("d") && t.hasOwnProperty("p") && t.hasOwnProperty("q") && t.hasOwnProperty("dmp1") && t.hasOwnProperty("dmq1") && t.hasOwnProperty("coeff") }, P.prototype.parsePropertiesFrom = function (t) { this.n = t.n, this.e = t.e, t.hasOwnProperty("d") && (this.d = t.d, this.p = t.p, this.q = t.q, this.dmp1 = t.dmp1, this.dmq1 = t.dmq1, this.coeff = t.coeff) }; var K = function (t) { P.call(this), t && ("string" == typeof t ? this.parseKey(t) : (this.hasPrivateKeyProperty(t) || this.hasPublicKeyProperty(t)) && this.parsePropertiesFrom(t)) }; (K.prototype = new P).constructor = K; var z = function (t) { t = t || {}, this.default_key_size = parseInt(t.default_key_size) || 1024, this.default_public_exponent = t.default_public_exponent || "010001", this.log = t.log || !1, this.key = null }; z.prototype.setKey = function (t) { this.log && this.key && console.warn("A key was already set, overriding existing."), this.key = new K(t) }, z.prototype.setPublicKey = function (t) { this.setKey(t) }, z.prototype.encrypt = function (t) { try { return this.getKey().encrypt(t) } catch (t) { return !1 } }, z.prototype.getKey = function (t) { if (!this.key) { if (this.key = new K, t && "[object Function]" === {}.toString.call(t)) return void this.key.generateAsync(this.default_key_size, this.default_public_exponent, t); this.key.generate(this.default_key_size, this.default_public_exponent) } return this.key }, z.prototype.getPublicKey = function () { return this.getKey().getPublicKey() }, module.exports.JSEncrypt = z }();